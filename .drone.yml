workspace:
  base: /go
  path: src/github.com/udistrital/${DRONE_REPO##udistrital/}
  when:
      branch:
      - master
      - release/*
kind: pipeline
name: cliente_deploy

steps:
  - name: install-deps
    volumes:
      - name: cypress-cache
        path: /root/.cache/Cypress
    image: cypress/base:13.3.0
    commands:
      - npm install
  # build and test the go program
  - name: nodejs
    image: node:latest
    commands:
    #  - node --version
     - npm install -g @angular/cli
     - npm i --force
     - ng build --configuration=test
    #  - npm start
    #  npm run build
    #  ng build --configuration=test
    #  - ls -la
    when:
      branch: [release/*]
      event: [push]

  - name: nodejs_prod
    image: node:latest
    commands:
      - npm install -g @angular/cli
      - npm i --force
      - ng build --configuration=test

      # - npm start
    #  - node --version
    #  - npm i --force
    #  - npm run build
    #  - ls -la
    when:
      branch: [master]
      event: [push, pull_request]

  # upload app.zip to s3 bucket for CodePipline
  - name: publish_s3
    image: plugins/s3
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      region: "us-east-1"
      bucket: "cliente-pruebas"
      source: www/**/*
      target: /${DRONE_REPO_NAME}
      strip_prefix: www/
    when:
      branch: [release/*]
      event: [push, pull_request]

 # upload app.zip to s3 bucket for CodePipline
  - name: publish_s3_prod
    image: plugins/s3
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      region: "us-east-1"
      bucket: "cliente-prod"
      source: www/**/*
      target: /${DRONE_REPO_NAME}
      strip_prefix: www/
    when:
      branch: [master]
      event: [push, pull_request]

  #Notify results to telegram
  - name: notify_telegram
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_token
      to:
        from_secret: telegram_to
      format: html
      message: >
        {{#success build.status}}
          ✅ <a href="{{build.link}}">SUCCESS</a> <b>Build #{{build.number}}</b>
          <b>type: </b><code>{{ build.event }}</code>
          <b>Repo: </b><code>{{repo.name}}</code>
          <b>Branch: </b><code>{{commit.branch}}</code>
          <b>Commit: </b><a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
          <b>Autor: </b>{{commit.author}} <code>&#128526 </code>
        {{else}}
          ❌ <a href="{{build.link}}">FAILURE</a> <b>Build #{{build.number}}</b>
          <b>type: </b><code>{{ build.event }}</code>
          <b>Repo: </b><code>{{repo.name}}</code>
          <b>Branch: </b><code>{{commit.branch}}</code>
          <b>Commit: </b><a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
          <b>Autor: </b>{{commit.author}} <code>&#128549 </code>
        {{/success}}
    when:
      status: [success, failure]
      branch: [master, release/*]
      event: [push, pull_request]
