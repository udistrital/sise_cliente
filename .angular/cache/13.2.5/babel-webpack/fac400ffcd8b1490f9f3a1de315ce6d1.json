{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as auth from 'oidc-auth/index.js';\nimport * as i0 from \"@angular/core\";\nexport let ImplicitAutenticationService = /*#__PURE__*/(() => {\n  class ImplicitAutenticationService {\n    constructor() {\n      this.session = null;\n      this.bearer = {\n        headers: new HttpHeaders({\n          'Accept': 'application/json',\n          'authorization': 'Bearer ' + window.localStorage.getItem('access_token')\n        })\n      };\n      auth.setGeneral(environment.TOKEN);\n    }\n\n    init() {}\n\n    logout() {\n      // limpiar localstorage y redirigir a login - home\n      // validar si da error sino llamarlo\n      if (!auth.logout()) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('id_token');\n        localStorage.removeItem('state');\n        localStorage.removeItem('expires_in');\n        localStorage.removeItem('expires_at');\n        window.location.href = \"/login\";\n      }\n    }\n\n    getPayload() {\n      return auth.getPayload();\n    }\n\n    live() {\n      if (auth.live(true)) {\n        auth.liveToken();\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    getAuthorizationUrl(button) {\n      return auth.live(button);\n    }\n\n  }\n\n  ImplicitAutenticationService.ɵfac = function ImplicitAutenticationService_Factory(t) {\n    return new (t || ImplicitAutenticationService)();\n  };\n\n  ImplicitAutenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImplicitAutenticationService,\n    factory: ImplicitAutenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImplicitAutenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}