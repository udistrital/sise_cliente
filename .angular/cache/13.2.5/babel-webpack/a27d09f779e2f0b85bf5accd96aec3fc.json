{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let HttpErrorManager = /*#__PURE__*/(() => {\n  class HttpErrorManager {\n    constructor() {}\n\n    handleError(error) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n      } // return an observable with a user-facing error message\n\n\n      return throwError({\n        status: error.status,\n        message: 'Something bad happened; please try again later.'\n      });\n    }\n\n  }\n\n  HttpErrorManager.ɵfac = function HttpErrorManager_Factory(t) {\n    return new (t || HttpErrorManager)();\n  };\n\n  HttpErrorManager.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpErrorManager,\n    factory: HttpErrorManager.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpErrorManager;\n})();","map":null,"metadata":{},"sourceType":"module"}